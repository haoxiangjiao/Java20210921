<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--1. 托管UserServiceImpl-->
    <bean id="us" class="com.itheima.service.impl.UserServiceImpl"/>

    <!--2. 把增强类交给spring托管-->
    <bean id="myAdvice" class="com.itheima.aop.MyAdvice"/>

   <!--
         3. AOP的配置，把MyAdvice里面的print方法给增强到UserServiceImpl的add方法上
            aop:config : 用于配置aop的
                aop:aspect : 用来配置切面的， 切面就是切入点和增强的结合
                    ref :  扩展出来的功能的对象是谁。
                aop:before ： 前置增强，在执行目标方法之前，先执行增强的方法
                    method :  扩展出来的功能是什么？ 写方法名
                    pointcut : 切入点，其实就是一串表达式，spring根据这串表达式去找到匹配的方法，这个这些方法应用上增强的功能。
   -->
    <aop:config>
        <aop:aspect ref="myAdvice">

            <!--定义表达式的抽取-->
            <aop:pointcut id="aa" expression="execution(* com..*.*(..))"/>

            <!--前置增强-->
           <!--<aop:before method="before" pointcut="execution(* com..*.*(..))"/>-->
           <aop:before method="before" pointcut-ref="aa"/>

            <!--后置增强-->
           <!--<aop:after-returning method="afterReturning" pointcut="execution(* com..*.*(..))"/>-->
           <aop:after-returning method="afterReturning" pointcut-ref="aa"/>

            <!--异常增强-->
           <!--<aop:after-throwing method="afterThrowing" pointcut="execution(* com..*.*(..))"/>-->

            <!--最终增强-->
          <!-- <aop:after method="after" pointcut="execution(* com..*.*(..))"/>-->

            <!--环绕增强-->
           <!-- <aop:around method="around"  pointcut="execution(* com..*.*(..))"/>-->

        </aop:aspect>
    </aop:config>

</beans>