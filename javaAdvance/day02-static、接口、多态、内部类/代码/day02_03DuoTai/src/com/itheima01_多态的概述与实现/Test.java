package com.itheima01_多态的概述与实现;

/*
多态时继封装、继承之后的面向对象的第三大特征。
多态指对于同一行为，须有不同的表现形式。在程序中，表示对同一方法，不同的对象有不同实现。
多态的前提
    继承或者实现【二选一】
    父类引用指向实现类对象【格式体现】
    方法的重写【意义体现：不重写，无意义】
多态的体现格式
    父类/接口类型 变量名 = new 子类/实现类对象；
    变量名.方法名();
需求：通过子父类类演示多态的使用


 */
public class Test {
    public static void main(String[] args) {
        //父类引用指向子类对象
        Fu f = new Zi();
        f.show();
        f=new Zi2();
        f.show();
    }
}
