package com.itheima02_等待唤醒案例;

/*
需求:利用等待唤醒机制，在多线程环境下，演示如何有效利用资源开展包子的生产和消费过程。
分析
    包子类定义开关变量，标记包子的状态。
    (无包子)包子铺线程生产包子，(有包子)吃货线程消费包子。
    通过判断包子的状态，控制包子铺线程和吃货线程交替任务执行。
步骤:
    包子类:包子状态为true,表示有包子，为false表示无包子。
    吃货线程
        没包子时，包子状态为false，吃货线程进入等待(将执行权交给包子铺做包子)。
        有包子时，包子状态为true，吃货线程吃完包子，包子状态为false，唤醒包子铺线程
    包子铺线程
        有包子时，包子状态为true，包子铺线程进入等待(将执行权交给吃货吃包子)。
        没包子时，包子状态为false，包子铺线程生产包子，包子状态为true，唤醒吃货线程。
实现
*/
public class Test {
    public static void main(String[] args) {
        //创建包子对象
        BaoZi bz = new BaoZi();
        //使用匿名对象创建吃货线程并启动
        new ChiHuo(bz).start();
        //使用匿名对象创建包子铺线程并启动
        new BaoZiPu(bz).start();
    }
}
