<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <!--1. 配置匿名即可访问的资源有哪些，也就是不需要登录，也不需要认证就可以访问的资源-->
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/plugins/**"/>
    <security:http security="none" pattern="/login.html"/>


    <!--2. 配置扫描样的地址，需要权限才能访问，登录的页面-->
    <security:http auto-config="true" use-expressions="true">

        <!--2.1 访问什么地址，需要用到什么权限 : 只要登录成功，就可以访问pages里面的网页-->
        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"/>

        <!--2.2 登录的页面要设置-->
        <security:form-login
                login-page="/login.html"
                password-parameter="password"
                username-parameter="username"
                login-processing-url="/login.do"
                default-target-url="/pages/main.html"
                authentication-failure-url="/login.html"
                always-use-default-target="true"
        />
        <!--2.3 如果使用了自己的登录页面，那么需要把csrf 给关闭掉-->
        <security:csrf disabled="true"/>

        <!--2.4 设置iframe选项，否则后台页面的中间内容无法显示-->
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>

        <!--2.5 配置退出登录-->
        <security:logout logout-url="/logout.do" logout-success-url="/login.html" invalidate-session="true"/>

    </security:http>

    <!--3. 配置认证的管理员-->
    <bean id="pe" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="springSecurityUserService">
            <security:password-encoder ref="pe"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--4. 开启注解控制controller方法的权限开关-->
    <security:global-method-security pre-post-annotations="enabled"/>

</beans>