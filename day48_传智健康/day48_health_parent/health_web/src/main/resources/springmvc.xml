<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">



    <!--1. 注解驱动-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!--
                配置消息转换器，主要是用来处理前段页面提交过来的json数据转化成对象类型
                虽然springmvc里面默认支持jackson的转换，但是parent里面没有这个依赖。添加的是fastjson
             -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json"/>
                <property name="features">
                    <list>

                      <!--  表示允许接受null的值。
                        1. 假如页面没有提交某一个参数，那么使用对象来接受，打印对象，将不会看到对应的参数属性有打印
                            {name:"admin" , age:null}  ==== User(name , age) ,   user.toString()  , 不会看到age的出现
                        2. 假如页面没有提交某一个参数过来，使用map集合来接受，打印map,
                            {name:"admin" , age:null} === map, 打印会有这样的效果 {name=admin , age=null}-->
                        <value>WriteMapNullValue</value>
                        <!--日期类型格式化-->
                        <!--java日期-> 前端 long毫秒值 16100123123, 转成yyyy-MM-dd HH:mm:ss-->
                        <value>WriteDateUseDateFormat</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--2. 静态资源处理-->
    <mvc:default-servlet-handler/>

   <!-- 3. 视图解析器 ：也不需要，方法返回的都是json数据-->

    <!--4. 扫描包 ：也不需要，因为service层已经写了-->

    <!--5. 要导入service层的配置文件： applicationContext-service.xml-->
    <import resource="classpath:applicationContext-service.xml"/>

    <!--6. 文件上传组件-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="104857600" />
        <property name="maxInMemorySize" value="4096" />
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!--7. 引入spring-security.xml-->
    <import resource="classpath:spring-security.xml"/>
</beans>